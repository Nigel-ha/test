- job: cloud
  displayName: Generate kubeconfig with token
  pool:
    name: prod-cloudpool-nix
  steps:
    - checkout: self
    - checkout: commonScripts
    - task: Bash@3
      displayName: "Install"
      inputs:
        targetType: "inline"
        script: |
          # Existing setup commands
          # ...

    - task: AzureKeyVault@2
      displayName: 'Get ExternalID from KeyVault'
      inputs:
        azureSubscription: 'AKV Cloud Engineering Secret Reader'
        KeyVaultName: 'kv-bcz-cet'
        SecretsFilter: 'externalid'
        RunAsPreJob: false

    - task: AmazonWebServices.aws-vsts-tools.AWSShellScript.AWSShellScript@1
      displayName: 'Generate kubeconfig with embedded token and Publish Artifact'
      env:
        externalID: $(externalid)
      inputs:
        awsCredentials: ${{ parameters.serviceConnection }}
        regionName: ap-southeast-2
        scriptType: inline
        inlineScript: |
          #!/bin/bash
          set -e
          . scripts/setup.sh "${{parameters.clusterName}}"

          # Generate kubeconfig file
          aws eks update-kubeconfig --name "${clusterName}" --region ap-southeast-2 --kubeconfig kubeconfig

          # Generate token
          token=$(aws eks get-token --cluster-name "${clusterName}" --region ap-southeast-2 --query 'status.token' --output text)

          # Modify kubeconfig to embed the token
          # Using sed to replace the exec section
          sed -i '/    exec:/,$d' kubeconfig
          echo "    token: ${token}" >> kubeconfig

          # Verify kubeconfig (do not display sensitive data)
          kubectl config view --flatten --minify

          # Copy kubeconfig to artifact staging directory
          mkdir -p $(Build.ArtifactStagingDirectory)
          cp kubeconfig $(Build.ArtifactStagingDirectory)/kubeconfig

    - task: PublishPipelineArtifact@1
      displayName: 'Publish kubeconfig Artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'kubeconfig-artifact'
