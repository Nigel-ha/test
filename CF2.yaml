AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon EKS Cluster with Managed Node Group, Auto Scaling Group, Private Endpoint, and Alias Record in Route53'

Parameters:
  ClusterName:
    Type: String
    Description: 'EKS Cluster name (must be lowercase)'
    AllowedPattern: '^[a-z0-9-]+$'
    ConstraintDescription: 'Cluster name must contain only lowercase alphanumeric characters and hyphens.'
  VpcCidr:
    Type: String
    Default: '10.0.0.0/16'
    Description: 'CIDR block for the VPC'
    AllowedPattern: '^(10|172|192)\.([0-9]{1,3}\.){2}[0-9]{1,3}/(1[6-9]|2[0-9]|3[0-2])$'
    ConstraintDescription: 'CIDR block must be a valid private IP address range with a valid subnet mask.'
  SubnetIds:
    Type: CommaDelimitedList
    Description: 'Comma separated list of subnet IDs for the VPC'
  NodeInstanceType:
    Type: String
    Default: 't3.medium'
    Description: 'EC2 instance type for the worker nodes'
  NodeAutoScalingGroupDesiredCapacity:
    Type: Number
    Default: 2
    Description: 'Desired number of worker nodes in the Auto Scaling Group'
  NodeAutoScalingGroupMinSize:
    Type: Number
    Default: 1
    Description: 'Minimum number of worker nodes in the Auto Scaling Group'
  NodeAutoScalingGroupMaxSize:
    Type: Number
    Default: 4
    Description: 'Maximum number of worker nodes in the Auto Scaling Group'

Resources:
  # VPC for EKS Cluster
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${ClusterName}-vpc"

  # EKS Cluster IAM Role
  EKSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
      Tags:
        - Key: Name
          Value: !Sub "${ClusterName}-eks-role"

  # Security Group for EKS
  EKSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: 'EKS cluster security group'
      Tags:
        - Key: Name
          Value: !Sub "${ClusterName}-security-group"
  
  # EKS Cluster
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      ResourcesVpcConfig:
        SubnetIds: !Ref SubnetIds
        SecurityGroupIds:
          - !Ref EKSSecurityGroup
      RoleArn: !GetAtt EKSRole.Arn

  # Node IAM Role
  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Tags:
        - Key: Name
          Value: !Sub "${ClusterName}-node-role"

  # Instance Profile for Worker Nodes
  NodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref NodeInstanceRole

  # Launch Template for Worker Nodes
  NodeLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        InstanceType: !Ref NodeInstanceType
        KeyName: "<Your-EC2-Key-Pair>"
        ImageId: "<Amazon-Linux-2-EKS-AMI>"
        IamInstanceProfile:
          Arn: !GetAtt NodeInstanceProfile.Arn
        SecurityGroupIds:
          - !Ref EKSSecurityGroup

  # Auto Scaling Group for Worker Nodes
  NodeAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref SubnetIds
      LaunchTemplate:
        LaunchTemplateId: !Ref NodeLaunchTemplate
        Version: "1"
      MinSize: !Ref NodeAutoScalingGroupMinSize
      MaxSize: !Ref NodeAutoScalingGroupMaxSize
      DesiredCapacity: !Ref NodeAutoScalingGroupDesiredCapacity
      Tags:
        - Key: Name
          Value: !Sub "${ClusterName}-worker-nodes"
          PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: 1
        MinInstancesInService: 1

  # Outputs
  Outputs:
    ClusterName:
      Description: 'EKS Cluster name'
      Value: !Ref ClusterName
    ClusterEndpoint:
      Description: 'EKS Cluster endpoint'
      Value: !GetAtt EKSCluster.Endpoint
    NodeInstanceRoleArn:
      Description: 'ARN of the node instance role'
      Value: !GetAtt NodeInstanceRole.Arn
