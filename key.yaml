  # KMS Key for EC2 EBS Volume Encryption
  NodeKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "KMS Key for EKS Worker Node EBS Volume Encryption"
      KeyUsage: ENCRYPT_DECRYPT
      EnableKeyRotation: true
      PendingWindowInDays: 7
      Tags:
        - Key: Name
          Value: !Sub "${ClusterName}-node-kms-key"
        - Key: StackId
          Value: !Ref AWS::StackId
        - Key: StackName
          Value: !Ref AWS::StackName
        - Key: SCE:owner
          Value: CET
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          # Allow root access
          - Sid: AllowRootAccess
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"

          # Allow EC2 Role to use the key for encryption/decryption
          - Sid: AllowEC2RoleUseOfTheKey
            Effect: Allow
            Principal:
              AWS: !GetAtt EKSRole.Arn
            Action:
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:DescribeKey"
            Resource: "*"

          # Deny CreateGrant unless for AWS service
          - Sid: DenyCreateGrantUnlessAWSService
            Effect: Deny
            Principal: "*"
            Action: "kms:CreateGrant"
            Resource: "*"
            Condition:
              StringNotEqualsIfExists:
                kms:GrantIsForAWSResource: "true"

          # Allow AWS services to create grants for KMS
          - Sid: AllowCreateGrantForAWSService
            Effect: Allow
            Principal: "*"
            Action: "kms:CreateGrant"
            Resource: "*"
            Condition:
              StringEqualsIfExists:
                aws:PrincipalIsAWSService: "true"
